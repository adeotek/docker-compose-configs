---
services:

  victoriametrics:
    image: victoriametrics/victoria-metrics:latest
    container_name: "${CONTAINER_NAME_PREFIX}victoriametrics"
    restart: unless-stopped
    command:
      - '--storageDataPath=/victoria-metrics-data'
      - '--httpListenAddr=:8428'
      - '--retentionPeriod=3'  # Retention period in months
      - '--memory.allowedPercent=60'
      - '--search.maxUniqueTimeseries=1000000'
      - '--search.maxQueryDuration=30s'
      - '--dedup.minScrapeInterval=15s'
    ports:
      - 8428:8428
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./victoriametrics/data:/victoria-metrics-data
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: "${CONTAINER_NAME_PREFIX}prometheus"
    restart: unless-stopped
    user: "65534:65534"  # nobody:nobody user
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=24h'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./prometheus/config:/etc/prometheus
      - ./prometheus/data:/prometheus
    networks:
      - monitoring
    depends_on:
      - victoriametrics

  loki:
    image: grafana/loki:latest
    container_name: "${CONTAINER_NAME_PREFIX}loki"
    restart: unless-stopped
    user: "10001:10001"  # Use the Loki user
    command: -config.file=/etc/loki/loki-config.yml
    ports:
      - 3100:3100
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./loki/config:/etc/loki
      - ./loki/data:/loki
    networks:
      - monitoring

  promtail:
    image: grafana/promtail:latest
    container_name: "${CONTAINER_NAME_PREFIX}promtail"
    volumes:
      - ./promtail/config:/etc/promtail
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers
    command: -config.file=/etc/promtail/promtail-config.yml
    restart: unless-stopped
    networks:
      - monitoring
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:latest
    container_name: "${CONTAINER_NAME_PREFIX}grafana"
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./grafana/data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - monitoring
      - proxy
    depends_on:
      - prometheus
      - loki
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.hl.adeotek.cloud`)"
      - "traefik.http.routers.grafana.entrypoints=https"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.middlewares=internal-whitelist@file"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

  node-exporter:
    image: prom/node-exporter:latest
    container_name: "${CONTAINER_NAME_PREFIX}node-exporter"
    restart: unless-stopped
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.disable-defaults'
      - '--collector.cpu'
      - '--collector.diskstats'
      - '--collector.filesystem'
      - '--collector.loadavg'
      - '--collector.meminfo'
      - '--collector.netdev'
      - '--collector.netstat'
      - '--collector.os'
      - '--collector.stat'
      - '--collector.time'
      - '--collector.vmstat'
      - '--collector.systemd'
      - '--collector.uname'
      - '--collector.textfile'
      - '--collector.textfile.directory=/var/lib/node_exporter/textfile_collector'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($|/)'
    ports:
      - 9100:9100
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - monitoring

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: "${CONTAINER_NAME_PREFIX}cadvisor"
    restart: unless-stopped
    ports:
      - 8181:8080
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    networks:
      - monitoring

networks:
  monitoring:
    name: "${CONTAINER_NAME_PREFIX}monitoring"
    driver: bridge
  proxy:
    name: sys--proxy
    external: true
