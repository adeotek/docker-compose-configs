---
services:

  docmost:
    image: docmost/docmost:latest
    container_name: dockmost-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - docmost:/app/data/storage
    environment:
      APP_URL: 'http://localhost:3000'
      APP_SECRET: '${APP_SECRET}'
      DATABASE_URL: 'postgresql://${DB_USER:-docmost}:${DB_PASS}@db:5432/docmost?schema=public'
      REDIS_URL: 'redis://redis:6379'
    networks:
      - docmost
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dockmost.rule=Host(`dockmost.example.com`)"
      - "traefik.http.routers.dockmost.entrypoints=https"
      - "traefik.http.routers.dockmost.tls=true"
      - "traefik.http.routers.dockmost.middlewares=internal-whitelist@file"
      - "traefik.http.services.dockmost.loadbalancer.server.port=3000"
    depends_on:
      - db
      - redis

  db:
    image: postgres:16-alpine
    container_name: dockmost-postgres
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: docmost
      POSTGRES_USER: docmost
      POSTGRES_PASSWORD: STRONG_DB_PASSWORD
    networks:
      - docmost

  redis:
    image: valkey/valkey:8-alpine
    container_name: dockmost-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - docmost

networks:
  docmost:
    name: docmost
  proxy:
    name: proxy
    external: true

volumes:
  docmost:
  db_data:
  redis_data:
