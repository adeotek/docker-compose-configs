---

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: ${CONTAINER_NAME_PREFIX}prometheus
    user: "65534:65534"  # nobody:nobody user
    volumes:
      - ./prometheus/config:/etc/prometheus
      - ./prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    restart: unless-stopped
    networks:
      - monitoring

  loki:
    image: grafana/loki:latest
    container_name: ${CONTAINER_NAME_PREFIX}loki
    user: "10001:10001"  # Use the Loki user
    volumes:
      - ./loki/config:/etc/loki
      - ./loki/data:/loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki-config.yml
    restart: unless-stopped
    networks:
      - monitoring

  promtail:
    image: grafana/promtail:latest
    container_name: ${CONTAINER_NAME_PREFIX}promtail
    volumes:
      - ./promtail/config:/etc/promtail
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers
    command: -config.file=/etc/promtail/promtail-config.yml
    restart: unless-stopped
    networks:
      - monitoring
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:latest
    container_name: ${CONTAINER_NAME_PREFIX}grafana
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - monitoring
    depends_on:
      - prometheus
      - loki

  node-exporter:
    image: prom/node-exporter:latest
    container_name: ${CONTAINER_NAME_PREFIX}node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($|/)'
    ports:
      - "9100:9100"
    restart: unless-stopped
    networks:
      - monitoring

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: ${CONTAINER_NAME_PREFIX}cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - "8181:8080"
    restart: unless-stopped
    networks:
      - monitoring

networks:
  monitoring:
    driver: bridge
    name: ${CONTAINER_NAME_PREFIX}-monitoring
